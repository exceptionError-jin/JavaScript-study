    호이스팅이란 무언인가
        변수를 선언할 때는 let = 5; -> 사용가능한 구역을(스코프) 구분함
        자바스크립트 실행전에 구역에 어떠한 값이 있는지 평가함
        선언과 할당이 분리되어 실행되어 선언이 먼저 실행되는 것처럼 보이는것

        호이스팅 문제를 해결하기 위해 let, const를 사용함

연산자
    산술 연산자
        ( + , - , * , / , % )

        let a = 5;

        let b = 2;

        console.log(a + b) // 7
        let c = a + b;
        console.log(c) // 7

        let d = true;
        console.log(a + d) // 6

        자바스크립트(true = 1, false = 0)

        console.log(a + null) // 5 -> null은 0의 값을 가지고 있음

        console.log(a + undefined) // NAN (Not a Number)



    단항 산술 연산자
        ++ 값이 1 증가
        -- 값이 1 감소

        + 영향 X
        - 음수

        let a = 5;
        ++a // 6
        +a // 5


    전위 연산자
        a++ //연산 후에 값을 더함
        ++a //연산 전에 값을 더함



    문자열 연결 연산자
        let a = "안";
        let b = "녕";

        console.log(a+b); //"안녕"

        a = '1';
        b = 2;

        console.log(a+b); //"12"

        -> 피연산자 중 하나 이상이 문자열인 경우 문자열로 동작


    할당 연산자
        =
            let a = 5; //값 할당
        +=
            let a += 5; //값의 누적
        -=
            let a -= 5; //값의 누적(차)
        *=
            let a *= 5; //값의 누적(곱)

        let str = "hello";
        str += "world"; //"hello world"


    우선 순위 연산자 ()
        10 * 2 + 2 //22
        10 * (2 + 2) //40

    명제의 참/거짓을 구분할 때 사용 -> boolean타입을 반환(참/거짓)

    논리 연산자
        || 논리합(or) -> 둘 중에 하나라돌 참이면 참
        && 논리곱(and) -> 둘 다 참이여야만 참
        ! 부정 (not) -> !true --> false


    비교 연산자
        == 동등 비교 --> 값이 같은지
        === 일치 비교 --> 타입과 값이 같은지
        != 부등 비교 --> 값이 다른지
        !== 불일치 비교 --> 값과 타입이 다른지

-----------------------------------------------------------------------

    제어문
        1. 조건문
            특정한 조건이 주어지고 그 조건의 평가(참, 거짓[논리연산자, 비교연산자])에 따라 결과가 달라지는 명령문

        2.switch
            변수의 값을 기준으로 일치하는 문장 실행되는

            switch(기준으로 삼을 변수){
                case 값1:
                    변수가 값1과 같으면 실행할 문장;
                case 값2:
                    변수가 값2와 같으면 실행할 문장;
                default:
                    기본값;
            }

            if..else

            ex) if(a===5){
                    a++
                    else{
                        --a
                    }
                }

                if(조건식1){
                    실행할문장
                }
                else if(조건식2){
                    실행할문장
                }
                else{
                    실행할문장
                }
                
        2. 반복문










