배열객체는 왜 const로 만들었는데도 값수정이 가능한가??
    -> 자바스크립트의 메모리 저장 방식

    힙  : 객체 값 할당이 이루어지는 곳
    콜 스택 : 힙에 저장된 객체를 참조하여 호출된 함수의 정보를 저장하고 실행하는 곳

    힙에는 객체가 저장
    콜스택에는 원시타입 저장

    1.원시타입 저장 방식
    - 콜스택에 값이 바로 저장
    - 렉시컬환경에 메모리 주소값이 저장

    2.참조 타입 데이터 저장 방식
    - 배열, 객체, 함수 등은 참조 타입이므로 메모리 힙에 저장
    - 참조 타입은 데이터가 저장된 메모리의 주소를 콜스택에 저장
    - 변수에는 객체의 값이 아닌 객체가 저장된 힙의 주소값이 저장

    ex) 
        let a = 5; //콜스택
        let b = {}; //힙
------------------------------------------------------------------------
얕은 복사
    값을 복사하여 할당했을 때 같은 메모리 주소를 가르키는 값

    let a = {};
    let b = a; // b -> a -> {} // 같은 주소
    a === b //true

깊은 복사
    얕은 복사와 달리 주소를 복사하여 공유하는 것이 아니라 아예 새로운 값을 메모리에 저장하고
    해당 주소를 가리키는 것

    let a = {}
    let b = {...a} //다른주소(새로운 복사본)

---------------------------------------------------------------------------------------
빌트인 객체
    자바스크립트안에 편하게 쓰라고 내장되어있는 객체

    Number
        Number.MAX_VALUE //javaScript에서 사용할 수 있는 가장 큰 수
        Number.MIN_VALUE//가장 작은수
        Number.isFinit()//유한수인지
        Number.toString()//숫자를 문자열로 바꿔줌

    Math
        Math.min(1,2,3)//최솟값
        Math.max(1,2,3)//최댓값
        Math.random()//숫자 - 1 랜덤값(소수형)
        Math.round()//소수점 첫 번째 자리에서 반올림
        Math.floor()//소수점 이하 버림
        Math.ceil()//소수점 이하 올림
        Math.abs()//절대값
        math.sqrt()//제곱근
        ...

    String
        String.length()//문자열 길이
        String.charAt(index)//인데스번호의 문자
                concat("문자열")//문자열 합침
                indexof("문자")//현재 문자의 인데스 위치
                replace(문자, 대체할 문자)//대체

    Date
        new Date()
        //현재 날짜와 시간을 가지고 오는 인스턴스
        //로컬 환경 컴퓨터 시간 => 이럴 경우 로컬에서 시간 변경하면 큰일남
        //로컬 환경이 아닌 서버 환경으로 가지고 올 수 잇는 라이브러리 momentJs, dayJs, Iuxon
        //unix 1970.01.01 부터 얼마나 시간이 지낫는지 계산하는 방법(초 단위)

        

---------------------------------------------------------------------------------------
나머지 매개변수


---------------------------------------------------------------------------------------
정규표현식


---------------------------------------------------------------------------------------
삼항연산자


---------------------------------------------------------------------------------------
new Map


---------------------------------------------------------------------------------------
set


---------------------------------------------------------------------------------------
구조분해할당


---------------------------------------------------------------------------------------

+ front end

promise
asyc await
setTimeout, interval
ajax, fetch, axios

+이벤트 루프, 실행컨텍스트, 클로저